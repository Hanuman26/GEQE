div.scrollable.tabs(id="tabs" percent-Height percent='100'  ng-style="style" ng-controller="tabsController")

    nav.navbar.navbar-default.navbar-inverse
        a(ng-click='clearResults()' title='Clear Results' href="#").noselect.navbar-button.btn-lg.glyphicon.glyphicon-th-list.navbar-text
        a(ng-click='clearShapes()' title='Clear Shapes' href="#").noselect.navbar-button.btn-lg.glyphicon.glyphicon-unchecked.navbar-text
        a(ng-click='clearMarkers()' title='Clear Markers' href="#").noselect.navbar-button.btn-lg.glyphicon.glyphicon-map-marker.navbar-text
        a(ng-click='clearAll()' title='Clear All' href="#").noselect.navbar-button.btn-lg.glyphicon.glyphicon-asterisk.navbar-text

    ul.nav.nav-tabs
        li(ng-repeat="tab in tabs" ng-class="{active:isActiveTab(tab.url)}" ng-click="onClickTab(tab)")
            a {{tab.title}}

    div( id="mainView" )
        div.tab-content(id="controlBox")
            div.tab( id="one.tpl.html" ng-class="{hidden:!isActiveTab('one.tpl.html')}")
                div(ng-controller="runTabController")
                    div.form
                        div.form-group-sm
                            label(for='dataSetSelect') Data Set:
                                button.inputItem.btn.btn-default.btn-xs.glyphicon.glyphicon-refresh(ng-click='getDataSets()' title="Refresh file list.")
                            select.form-control(id="dataSetSelect" onchange="newCenter()")
                                option( ng-repeat="item in dataSets" value="{{item}}") {{item}}
                        div.form-group-sm
                            div.input-group
                                label(for='pFileName') Polygon:
                                button.inputItem.btn.btn-default.btn-xs.glyphicon.glyphicon-refresh(ng-click="populatePolygonSelect()" title="Refresh file list.")
                                button.inputItem.btn.btn-default.btn-xs.glyphicon.glyphicon-floppy-disk(ng-click="saveList()" title= "Save Polygon File")
                                button.inputItem.btn.btn-default.btn-xs.glyphicon.glyphicon-pencil(ng-click="drawPolygonFile()" title="Draw polygons to the map.")
                                div(style="display:inline-table; width:100%")
                                    div.input-group-btn
                                        button.btn.btn-sm.btn-default(type="button" id="pFileDropButton" data-toggle="dropdown" aria-expanded="false")
                                            span.caret
                                        ul.scrollable-menu.dropdown-menu(role="menu")
                                            li(ng-repeat="item in polygonFiles" ng-click="polyFileSelected(item)" value="{{item}}") {{item}}
                                    input.form-control(type="text" ng-model="polyFile" id="pFileName")
                        fieldset.scheduler-border
                            legend.scheduler-border Run Query Job
                            div.form-group-sm
                                label(for='sFileName') Job Name:
                                input.form-control(id="sFileName" value="my-scores")
                            div.form-group-sm
                                div(id="rankReturnInput")
                                    label(for='sTopN') Return top:
                                    input.form-control(id="sTopN" value="300")
                            div.form-group-sm
                                div( id="percentReturnInput" class="invis")
                                    label(for='sTopPercent') Return Percent:
                                    input.form-control(id="sTopPercent" value="0.0001")

                            div(id="hr1" )
                                div.form-group-sm
                                    label(for='bPercent') Limit Return by Percent
                                    input.form-control-sm(type="checkbox" id="bPercent" ng-click="modReturn()")

                            div.form-group-sm
                                label(for="cStopW") Custom Stop Words
                                input.form-control( type="text" id="cStopW")

                            div( id="hr3" )
                                div.form-group-sm
                                    label Query by Location
                                    input.form-control-sm( style="margin-left: 5px;" type ="radio", value="0" ng-model="useTimeSeries" ng-value="false")
                                    br
                                    label Query by Event
                                    input.form-control-sm( style="margin-left: 5px;" type ="radio", value="1" ng-model="useTimeSeries" ng-value="true")

                            button.form-control.btn.btn-default(ng-click="applyScores()" title='Start Query Job') Start Job
                        fieldset.scheduler-border
                            legend.scheduler-border Get Training Data
                            div.form-group-sm
                                label(for='tFileName') Job Name:
                                input.form-control(id="tFileName" value="training")
                            button.form-control.btn.btn-default(ng-click="applyTraining()" title='Get Training Data') Get Data
            div.tab( id="two.tpl.html" ng-class="{hidden:!isActiveTab('two.tpl.html')}")
                div(ng-controller="resultsTabController")
                    form
                        fieldset.scheduler-border
                            legend.scheduler-border Query Results
                            div.form-group-sm
                                label(for="scoreSelect") Job Name:
                                button.inputItem.btn.btn-default.btn-xs.glyphicon.glyphicon-refresh(ng-click="popScore()" title="Refresh file list.")
                                button.inputItem.btn.btn-default.btn-xs.glyphicon.glyphicon-pencil(ng-click="getScores()" title="Load scores.")
                                select.form-control( name="scoreSelect" id="scoreSelect" ng-model="getScoresModel.fileAppOut")
                                    option( ng-repeat="item in scoreFiles" value="{{item}}") {{item}}
                            div.form-group-sm
                                label(for="sMaxEntries")  Max Points:
                                input.form-control(type="number" id="sMaxEntries" ng-model="getScoresModel.maxOut" step="any" novalidate)
                            div.form-group-sm
                                label(for="epsilon") Cluster Epsilon(km):
                                input.form-control(type="number" id="epsilon" value="1" step="any" novalidate)
                            div.form-group-sm
                                label(for="sBinSize") Bin Size:
                                input.form-control(type="number" id="sBinSize" ng-model="getScoresModel.fBinSize" step="any" novalidate)
                            div.form-group-sm
                                label(for='drawClusters') Draw Clusters:
                                input.form-control-sm(type="radio" ng-model="getScoresModel.drawMode" value="cluster" id="drawClusters" name="binBy")
                            div.form-group-sm
                                label(for='aggScores') Bin by Lat-Lon:
                                input.form-control-sm(type="radio" ng-model="getScoresModel.drawMode" value="latlonbin" id="aggScores" name="binBy")
                            div.form-group-sm
                                label(for='indPosts') Individual Posts:
                                input.form-control-sm(type="radio" ng-model="getScoresModel.drawMode" value="none" id="indPosts" name="binBy")
                            div.form-group-sm
                                label(for='aggTime') Bin as time series:
                                input.form-control-sm( type="checkbox" ng-model="getScoresModel.bBinByDate" id="aggTime" name="aggTime")
                        fieldset.scheduler-border
                            legend.scheduler-border Training Results
                            div.form-group-sm
                                label(for="trainingSelect") Job Name:
                                button.inputItem.btn.btn-default.btn-xs.glyphicon.glyphicon-refresh(ng-click='populateTrainingSelect()' title="Refresh file list.")
                                button.inputItem.btn.btn-default.btn-xs.glyphicon.glyphicon-pencil(ng-click="drawTrainingData()" title="Draw training data to the map.")
                                select.form-control(name="trainingSelect" ng-model="trainingDataModel.fileAppOut" id="trainingSelect")
                                    option( ng-repeat="item in trainingFiles" value="{{item}}") {{item}}

    table.table.table-striped
        tr
            th
                button.inputItem.btn.btn-default.btn-xs.glyphicon.glyphicon-refresh(ng-click="getJobStatus()" title="Refresh Job Status.")
                | Job Name
            th Job Status
        tbody(ng:repeat="job in jobs")
            tr
                td {{job.jobname}}
                td {{job.status}}




